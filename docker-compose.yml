version: '3.8'

services:
  app:
    build: .
    container_name: misight-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/misight_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=DEBUG
      - LOGGING_LEVEL_ORG_HIBERNATE_SQL=DEBUG
      - LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL=TRACE
      - LOGGING_LEVEL_COM_MISIGHT=DEBUG
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE=2
      - SPRING_MVC_THROW_EXCEPTION_IF_NO_HANDLER_FOUND=true
      - SPRING_WEB_RESOURCES_ADD_MAPPINGS=false
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - misight-network

  postgres:
    image: postgres:15-alpine
    container_name: misight-postgres
    environment:
      POSTGRES_DB: misight_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - misight-network

volumes:
  postgres-data:
    driver: local

networks:
  misight-network:
    driver: bridge